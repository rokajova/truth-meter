[{"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js":"1","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js":"2","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js":"3","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js":"4","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js":"5","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js":"6","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js":"7","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js":"8","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js":"9","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js":"10","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js":"11","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js":"12","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js":"13","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js":"14"},{"size":547,"mtime":1614244528635,"results":"15","hashOfConfig":"16"},{"size":652,"mtime":1613395085796,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2004,"mtime":1613396233321,"results":"19","hashOfConfig":"16"},{"size":3483,"mtime":1614246162372,"results":"20","hashOfConfig":"16"},{"size":1390,"mtime":1612204890217,"results":"21","hashOfConfig":"16"},{"size":1605,"mtime":1612848579433,"results":"22","hashOfConfig":"16"},{"size":496,"mtime":1609138412025,"results":"23","hashOfConfig":"16"},{"size":3240,"mtime":1612767515463,"results":"24","hashOfConfig":"16"},{"size":4155,"mtime":1614245859547,"results":"25","hashOfConfig":"16"},{"size":621,"mtime":1609154760951,"results":"26","hashOfConfig":"16"},{"size":4507,"mtime":1614245677960,"results":"27","hashOfConfig":"16"},{"size":3719,"mtime":1613396060084,"results":"28","hashOfConfig":"16"},{"size":860,"mtime":1613395809837,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4djakx",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js",[],["61","62"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js",["63","64","65","66"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js",["67"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport firebase from \"../../Config/firebase\";\r\n\r\nconst db = firebase.firestore();\r\n// Convert createDate timestamp seconds to string with result being YYYY/MM/DD HH:MM:SS\r\nexport function timeStampToString(ts) {\r\n  const date = new Date(ts * 1000);\r\n  return (\r\n    date.getFullYear() +\r\n    \"/\" +\r\n    (date.getMonth() + 1) +\r\n    \"/\" +\r\n    date.getDate() +\r\n    \" \" +\r\n    (date.getHours() < 10 ? \"0\" : \"\") +\r\n    date.getHours() +\r\n    \":\" +\r\n    (date.getMinutes() < 10 ? \"0\" : \"\") +\r\n    date.getMinutes() +\r\n    \":\" +\r\n    (date.getSeconds() < 10 ? \"0\" : \"\") +\r\n    date.getSeconds()\r\n  );\r\n}\r\n\r\nconst PostCard = (props) => {\r\n  // gauge style\r\n  const chartStyle = { width: 400 };\r\n\r\n  return (\r\n    <Link\r\n      to={{ pathname: \"post/\" + props.data.id, state: { post: props.data } }}\r\n    >\r\n      <div style={{ border: \"1px solid black\", margin: \"10px\" }}>\r\n        <h1>{props.data.title}</h1>\r\n        <h3>{props.data.link}</h3>\r\n        <div>\r\n          Create Date : {timeStampToString(props.data.createDate.seconds)}\r\n        </div>\r\n        <div>Posted By: {props.data.createUserName}</div>\r\n        <div>RatingScore: {props.data.ratingScore} %</div>\r\n        <GaugeChart\r\n          style={chartStyle}\r\n          textColor=\"black\"\r\n          id=\"gauge-chart6\"\r\n          animate={false}\r\n          nrOfLevels={15}\r\n          percent={props.data.ratingScore / 100}\r\n          needleColor=\"#345243\"\r\n        />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js",["68","69"],"import React, { Component } from \"react\";\r\nimport { Container, Input } from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport firebase from \"../../Config/firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: {},\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  //If state is defined, populate post state with post data from this.props.location.state.post, set isLoaded to true.\r\n  //If state is not defined, run getPostByID function passing post id\r\n  componentDidMount() {\r\n    if (typeof this.props.location.state !== \"undefined\") {\r\n      if (this.props.location.state.hasOwnProperty(\"post\")) {\r\n        this.setState(\r\n          {\r\n            post: this.props.location.state.post,\r\n          },\r\n          () => {\r\n            this.setState({ isLoaded: true });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.getPostByID(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  // Convert createDate timestamp to string with result being YYYY/MM/DD HH:MM:SS\r\n  timeStampToString = (ts) => {\r\n    const date = new Date(ts * 1000);\r\n    return (\r\n      date.getFullYear() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \" \" +\r\n      (date.getHours() < 10 ? \"0\" : \"\") +\r\n      date.getHours() +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" : \"\") +\r\n      date.getMinutes() +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" : \"\") +\r\n      date.getSeconds()\r\n    );\r\n  };\r\n\r\n  // get article from Posts collection in firestore, set article state with data\r\n  getPostByID = (postid) => {\r\n    db.collection(\"Posts\")\r\n      .doc(postid)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          this.setState(\r\n            {\r\n              post: doc.data(),\r\n            },\r\n            () => {\r\n              this.setState({\r\n                isLoaded: true,\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.props.history.push({ pathname: \"/\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      const gaugeStyle = { width: 400 };\r\n      return (\r\n        <Container>\r\n          <div>\r\n            <div>Title: {this.state.post.title}</div>\r\n            <div>\r\n              Date: {this.timeStampToString(this.state.post.createDate.seconds)}\r\n            </div>\r\n            <div>Created by: {this.state.post.createUserName}</div>\r\n            <GaugeChart\r\n              id=\"gauge-chart6\"\r\n              style={gaugeStyle}\r\n              animate={false}\r\n              textColor=\"black\"\r\n              nrOfLevels={15}\r\n              percent={this.state.post.ratingScore / 100}\r\n              needleColor=\"#345243\"\r\n            />\r\n            <iframe\r\n              src={this.state.post.link}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"80vh\",\r\n                borderRadius: \"10px\",\r\n                border: \"none\",\r\n              }}\r\n            ></iframe>\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <div>Loading</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewPost);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js",["70"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js",["71","72","73","74"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":3,"nodeType":"81","messageId":"82","endLine":8,"endColumn":9},{"ruleId":"79","severity":1,"message":"83","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":14},{"ruleId":"79","severity":1,"message":"85","line":13,"column":8,"nodeType":"81","messageId":"82","endLine":13,"endColumn":15},{"ruleId":"79","severity":1,"message":"86","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":9},{"ruleId":"79","severity":1,"message":"87","line":2,"column":21,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":100,"column":13,"nodeType":"90","endLine":108,"endColumn":14},{"ruleId":"79","severity":1,"message":"91","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":15},{"ruleId":"79","severity":1,"message":"92","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":43,"column":9,"nodeType":"95","messageId":"96","endLine":52,"endColumn":10},{"ruleId":"93","severity":1,"message":"94","line":64,"column":9,"nodeType":"95","messageId":"96","endLine":72,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":96,"column":6,"nodeType":"99","endLine":96,"endColumn":8,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'Link' is defined but never used.","'classes' is defined but never used.","'db' is assigned a value but never used.","'Input' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Alert' is defined but never used.","'user' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [authListener]",{"range":"106","text":"107"},[2809,2811],"[authListener]"]