[{"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js":"1","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js":"2","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js":"3","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js":"4","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js":"5","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js":"6","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js":"7","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js":"8","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js":"9","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js":"10","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js":"11","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js":"12","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js":"13","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js":"14","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Search\\Search.js":"15","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Search\\Autocomplete.js":"16"},{"size":547,"mtime":1614244528635,"results":"17","hashOfConfig":"18"},{"size":652,"mtime":1613395085796,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2129,"mtime":1615768959319,"results":"21","hashOfConfig":"18"},{"size":2984,"mtime":1615107269117,"results":"22","hashOfConfig":"18"},{"size":3310,"mtime":1615768713602,"results":"23","hashOfConfig":"18"},{"size":1580,"mtime":1615639991112,"results":"24","hashOfConfig":"18"},{"size":496,"mtime":1609138412025,"results":"25","hashOfConfig":"18"},{"size":2844,"mtime":1615394723525,"results":"26","hashOfConfig":"18"},{"size":4211,"mtime":1615107785209,"results":"27","hashOfConfig":"18"},{"size":621,"mtime":1609154760951,"results":"28","hashOfConfig":"18"},{"size":4507,"mtime":1614245677960,"results":"29","hashOfConfig":"18"},{"size":4820,"mtime":1615625562818,"results":"30","hashOfConfig":"18"},{"size":860,"mtime":1613395809837,"results":"31","hashOfConfig":"18"},{"size":1679,"mtime":1615769519562,"results":"32","hashOfConfig":"18"},{"size":1804,"mtime":1615768890029,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"4djakx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js",[],["71","72"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js",["73","74","75"],"import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  //THIS IS GOING TO BE USED FOR ADMINISTRATOR FUNCTIONS\r\n  // componentDidUpdate(nextProps, nextContext) {\r\n  //   if (!nextProps.auth.isEmpty) {\r\n  //     firebase\r\n  //       .auth()\r\n  //       .currentUser.getIdTokenResult()\r\n  //       .then((claim) => {\r\n  //         console.log(claim);\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" expand=\"lg\">\r\n        <Link to={{ pathname: \"/\" }}>\r\n          {\" \"}\r\n          <Navbar.Brand className=\"text-white\">TruthMeter</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Form inline>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"enter a tag\"\r\n            className=\"mr-sm-3\"\r\n          />\r\n        </Form>\r\n        <Navbar.Toggle className=\"ml-auto\" aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {this.props.auth.isEmpty ? (\r\n            <Nav className=\"ml-auto \">\r\n              <Nav.Link>\r\n                <Link to=\"/login\">\r\n                  {\" \"}\r\n                  &nbsp; <i className=\"fas fa-user\" /> LOG IN/SIGN UP\r\n                </Link>\r\n              </Nav.Link>\r\n\r\n              <Nav.Link>\r\n                &nbsp; <i className=\"fas fa-info\" /> INFO\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link>\r\n                <Link to=\"/new-post\">\r\n                  {\" \"}\r\n                  &nbsp; <i className=\"fas fa-plus\" />\r\n                  NEW POST\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-info\" />\r\n                INFO\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/profile\">\r\n                  {\" \"}\r\n                  &nbsp; <i className=\"fas fa-user\" />\r\n                  PROFILE\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onClick={() => {\r\n                  firebase.auth().signOut();\r\n                }}\r\n              >\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-minus\" />\r\n                LOG OUT\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst enhance = connect(({ firebase: { auth, profile } }) => ({\r\n  auth,\r\n  profile,\r\n}));\r\n\r\nexport default enhance(Header);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js",["76"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js",["77"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport classes from \"./PostCard.module.css\";\r\n\r\nconst db = firebase.firestore();\r\n// Convert createDate timestamp seconds to string with result being YYYY/MM/DD HH:MM:SS\r\nexport function timeStampToString(ts) {\r\n  const date = new Date(ts * 1000);\r\n  return (\r\n    date.getFullYear() +\r\n    \"/\" +\r\n    (date.getMonth() + 1) +\r\n    \"/\" +\r\n    date.getDate() +\r\n    \" \" +\r\n    (date.getHours() < 10 ? \"0\" : \"\") +\r\n    date.getHours() +\r\n    \":\" +\r\n    (date.getMinutes() < 10 ? \"0\" : \"\") +\r\n    date.getMinutes() +\r\n    \":\" +\r\n    (date.getSeconds() < 10 ? \"0\" : \"\") +\r\n    date.getSeconds()\r\n  );\r\n}\r\n\r\nconst PostCard = (props) => {\r\n  return (\r\n    <Link\r\n      to={{ pathname: \"post/\" + props.data.id, state: { post: props.data } }}\r\n    >\r\n      <Container className={classes.PostCardContainer}>\r\n        <Row>\r\n          <Col className=\"my-auto\" sm={10}>\r\n            {props.data.link}\r\n          </Col>\r\n          <Col className=\"ml-auto\" sm={2}>\r\n            <GaugeChart\r\n              style={{ maxWidth: \"150px\" }}\r\n              textColor=\"black\"\r\n              id=\"gauge-chart6\"\r\n              animate={false}\r\n              nrOfLevels={15}\r\n              percent={props.data.ratingScore / 100}\r\n              needleColor=\"#345243\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js",["78"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Collapse, Button } from \"react-bootstrap\";\r\nimport firebase from \"../../Config/firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: {},\r\n      isLoaded: false,\r\n      infoOpen: false,\r\n    };\r\n  }\r\n\r\n  //If state is defined, populate post state with post data from this.props.location.state.post, set isLoaded to true.\r\n  //If state is not defined, run getPostByID function passing post id\r\n  componentDidMount() {\r\n    this.getPostByID(this.props.match.params.id);\r\n  }\r\n\r\n  // Convert createDate timestamp to string with result being YYYY/MM/DD HH:MM:SS\r\n  timeStampToString = (ts) => {\r\n    const date = new Date(ts * 1000);\r\n    return (\r\n      date.getFullYear() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \" \" +\r\n      (date.getHours() < 10 ? \"0\" : \"\") +\r\n      date.getHours() +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" : \"\") +\r\n      date.getMinutes() +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" : \"\") +\r\n      date.getSeconds()\r\n    );\r\n  };\r\n\r\n  // get article from Posts collection in firestore, set article state with data\r\n  getPostByID = (postid) => {\r\n    db.collection(\"Posts\")\r\n      .doc(postid)\r\n      // do i need to use onSnapshot here, if im migrating GaugeChart to RatePost component?\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          this.setState(\r\n            {\r\n              post: doc.data(),\r\n            },\r\n            () => {\r\n              this.setState({\r\n                isLoaded: true,\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.props.history.push({ pathname: \"/\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <div style={{ border: \"1px solid black\" }}>\r\n          <div>\r\n            <p style={{ display: \"inline-block\" }}>{this.state.post.link}</p>\r\n            <Button\r\n              style={{ display: \"inline-block\" }}\r\n              onClick={() => this.setState({ infoOpen: !this.state.infoOpen })}\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={this.state.infoOpen}\r\n            ></Button>\r\n            <Collapse in={this.state.infoOpen}>\r\n              <div id=\"example-collapse-text\">info here</div>\r\n            </Collapse>\r\n          </div>\r\n\r\n          <iframe\r\n            src={this.state.post.link}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"80vh\",\r\n              border: \"none\",\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>Loading</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewPost);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js",["79","80","81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = () => {\r\n  // required states for authentication\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n\r\n  // config for google authentication\r\n  const uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInSuccessUrl: \"/\",\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n  };\r\n\r\n  // clears login and signin state\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  // clears errors state\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  // signs in with existing user if there are no errors described in the switch statement\r\n  // if there are errors, set state with the corresponding error\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  // signs up a new user if there are no errors described in the switch statement\r\n  // if there are errors, set state with the corresponding error\r\n  const handleSignup = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  // sign out user, this is being used in the Header\r\n  // const handleLogout = () => {\r\n  //   firebase.auth().signOut();\r\n  // };\r\n\r\n  // checks for auth state changes, set state accordingly\r\n  const authListener = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // this hook is ran on every render\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <div className={classes.loginContainer}>\r\n        <label>UserName</label>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <p className={classes.errorMsg}>{emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className={classes.errorMsg}>{passwordError}</p>\r\n        <div className={classes.btnContainer}>\r\n          {\" \"}\r\n          {hasAccount ? (\r\n            <div>\r\n              <button className={classes.button} onClick={handleLogin}>\r\n                Sign In\r\n              </button>\r\n              <p>\r\n                Don't have an account?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <button className={classes.button} onClick={handleSignup}>\r\n                Sign Up\r\n              </button>\r\n              <p>\r\n                Have an account?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n              </p>\r\n            </div>\r\n          )}{\" \"}\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst enhance = connect(({ firebase: { auth, profile } }) => ({\r\n  auth,\r\n  profile,\r\n}));\r\n\r\nexport default enhance(Login);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Search\\Search.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Search\\Autocomplete.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":3,"nodeType":"89","messageId":"90","endLine":5,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":9},{"ruleId":"87","severity":1,"message":"92","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":15},{"ruleId":"87","severity":1,"message":"93","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"94","line":8,"column":7,"nodeType":"89","messageId":"90","endLine":8,"endColumn":9},{"ruleId":"95","severity":1,"message":"96","line":85,"column":11,"nodeType":"97","endLine":92,"endColumn":13},{"ruleId":"87","severity":1,"message":"98","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":43,"column":9,"nodeType":"101","messageId":"102","endLine":52,"endColumn":10},{"ruleId":"99","severity":1,"message":"100","line":64,"column":9,"nodeType":"101","messageId":"102","endLine":72,"endColumn":10},{"ruleId":"103","severity":1,"message":"104","line":96,"column":6,"nodeType":"105","endLine":96,"endColumn":8,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'classes' is defined but never used.","'Container' is defined but never used.","'db' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'user' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [authListener]",{"range":"112","text":"113"},[2809,2811],"[authListener]"]