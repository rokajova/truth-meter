[{"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js":"1","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js":"2","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js":"3","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js":"4","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js":"5","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js":"6","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js":"7","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js":"8","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js":"9","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js":"10","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js":"11","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js":"12","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js":"13","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js":"14"},{"size":547,"mtime":1614244528635,"results":"15","hashOfConfig":"16"},{"size":652,"mtime":1613395085796,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2004,"mtime":1613396233321,"results":"19","hashOfConfig":"16"},{"size":2767,"mtime":1614348108046,"results":"20","hashOfConfig":"16"},{"size":1390,"mtime":1612204890217,"results":"21","hashOfConfig":"16"},{"size":1488,"mtime":1614621179712,"results":"22","hashOfConfig":"16"},{"size":496,"mtime":1609138412025,"results":"23","hashOfConfig":"16"},{"size":3240,"mtime":1612767515463,"results":"24","hashOfConfig":"16"},{"size":4155,"mtime":1614245859547,"results":"25","hashOfConfig":"16"},{"size":621,"mtime":1609154760951,"results":"26","hashOfConfig":"16"},{"size":4507,"mtime":1614245677960,"results":"27","hashOfConfig":"16"},{"size":3719,"mtime":1613396060084,"results":"28","hashOfConfig":"16"},{"size":860,"mtime":1613395809837,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4djakx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\index.js",[],["63","64"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\App.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\reportWebVitals.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RouterManager\\RouterManager.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Header\\Header.js",["65","66","67","68"],"import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  //THIS IS GOING TO BE USED FOR ADMINISTRATOR FUNCTIONS\r\n  // componentDidUpdate(nextProps, nextContext) {\r\n  //   if (!nextProps.auth.isEmpty) {\r\n  //     firebase\r\n  //       .auth()\r\n  //       .currentUser.getIdTokenResult()\r\n  //       .then((claim) => {\r\n  //         console.log(claim);\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\" className=\"text-white\">\r\n          TruthMeter\r\n        </Navbar.Brand>\r\n\r\n        <Form inline>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"enter a tag\"\r\n            className=\"mr-sm-3\"\r\n          />\r\n        </Form>\r\n        <Navbar.Toggle className=\"ml-auto\" aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {this.props.auth.isEmpty ? (\r\n            <Nav className=\"ml-auto \">\r\n              <Nav.Link href=\"/login\">\r\n                &nbsp; <i className=\"fas fa-user\" /> LOG IN/SIGN UP\r\n              </Nav.Link>\r\n              <Nav.Link href=\"#\">\r\n                &nbsp; <i className=\"fas fa-info\" /> INFO\r\n              </Nav.Link>\r\n            </Nav>\r\n          ) : (\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link href=\"/new-post\">\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-plus\" />\r\n                NEW POST\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-info\" />\r\n                INFO\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/profile\">\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-user\" />\r\n                PROFILE\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onClick={() => {\r\n                  firebase.auth().signOut();\r\n                }}\r\n              >\r\n                {\" \"}\r\n                &nbsp; <i className=\"fas fa-minus\" />\r\n                LOG OUT\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst enhance = connect(({ firebase: { auth, profile } }) => ({\r\n  auth,\r\n  profile,\r\n}));\r\n\r\nexport default enhance(Header);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Main\\Main.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\PostCard\\PostCard.js",["69"],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\ViewPost\\ViewPost.js",["70","71"],"import React, { Component } from \"react\";\r\nimport { Container, Input } from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport firebase from \"../../Config/firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: {},\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  //If state is defined, populate post state with post data from this.props.location.state.post, set isLoaded to true.\r\n  //If state is not defined, run getPostByID function passing post id\r\n  componentDidMount() {\r\n    if (typeof this.props.location.state !== \"undefined\") {\r\n      if (this.props.location.state.hasOwnProperty(\"post\")) {\r\n        this.setState(\r\n          {\r\n            post: this.props.location.state.post,\r\n          },\r\n          () => {\r\n            this.setState({ isLoaded: true });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.getPostByID(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  // Convert createDate timestamp to string with result being YYYY/MM/DD HH:MM:SS\r\n  timeStampToString = (ts) => {\r\n    const date = new Date(ts * 1000);\r\n    return (\r\n      date.getFullYear() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \" \" +\r\n      (date.getHours() < 10 ? \"0\" : \"\") +\r\n      date.getHours() +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" : \"\") +\r\n      date.getMinutes() +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" : \"\") +\r\n      date.getSeconds()\r\n    );\r\n  };\r\n\r\n  // get article from Posts collection in firestore, set article state with data\r\n  getPostByID = (postid) => {\r\n    db.collection(\"Posts\")\r\n      .doc(postid)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          this.setState(\r\n            {\r\n              post: doc.data(),\r\n            },\r\n            () => {\r\n              this.setState({\r\n                isLoaded: true,\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.props.history.push({ pathname: \"/\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      const gaugeStyle = { width: 400 };\r\n      return (\r\n        <Container>\r\n          <div>\r\n            <div>Title: {this.state.post.title}</div>\r\n            <div>\r\n              Date: {this.timeStampToString(this.state.post.createDate.seconds)}\r\n            </div>\r\n            <div>Created by: {this.state.post.createUserName}</div>\r\n            <GaugeChart\r\n              id=\"gauge-chart6\"\r\n              style={gaugeStyle}\r\n              animate={false}\r\n              textColor=\"black\"\r\n              nrOfLevels={15}\r\n              percent={this.state.post.ratingScore / 100}\r\n              needleColor=\"#345243\"\r\n            />\r\n            <iframe\r\n              src={this.state.post.link}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"80vh\",\r\n                borderRadius: \"10px\",\r\n                border: \"none\",\r\n              }}\r\n            ></iframe>\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <div>Loading</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewPost);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\NewPost\\NewPost.js",["72"],"import React, { Component } from \"react\";\r\nimport { Alert, Input, Button, FormGroup } from \"reactstrap\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ReactTags from \"react-tag-autocomplete\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass NewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tags: [],\r\n      post: {\r\n        title: \"\",\r\n        link: \"\",\r\n        createDate: new Date(),\r\n        createUserID: \"\",\r\n        createUserName: \"\",\r\n        tags: [],\r\n        popularScore: \"\",\r\n        rates: [],\r\n        ratingScore: \"\",\r\n      },\r\n    };\r\n    this.reactTags = React.createRef();\r\n  }\r\n\r\n  //ReactTags function\r\n  onTagDelete(i) {\r\n    const tags = this.state.tags.slice(0);\r\n    tags.splice(i, 1);\r\n    this.setState({ tags });\r\n  }\r\n\r\n  //ReactTags function\r\n  onTagAddition(tag) {\r\n    const tags = [].concat(this.state.tags, tag);\r\n    this.setState({ tags });\r\n  }\r\n  //ReactTags input validate condition(must return a boolean)\r\n  onTagValidate() {\r\n    return this.state.tags.length < 4;\r\n  }\r\n\r\n  // set Post title state from the Input\r\n  onChangePostTitle = (value) => {\r\n    this.setState({\r\n      post: {\r\n        ...this.state.post,\r\n        title: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // set Post link state from the Input\r\n  onChangePostLink = (value) => {\r\n    this.setState({\r\n      post: {\r\n        ...this.state.post,\r\n        link: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //add doc to Posts collection, then redirect to home\r\n  submitPost() {\r\n    // get user reference\r\n    const userRef = db.collection(\"Users\").doc(this.props.auth.uid);\r\n\r\n    const post = this.state.post;\r\n    post.createUserID = this.props.auth.uid;\r\n    post.createUserName = this.props.auth.displayName;\r\n    post.tags = this.state.tags;\r\n    db.collection(\"Posts\")\r\n      .add(post)\r\n      .then((res) => {\r\n        return userRef.get().then((doc) => {\r\n          userRef.update({ userPosts: [...doc.data().userPosts, res.id] });\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    // Check is string is an URL\r\n\r\n    function is_url(str) {\r\n      let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n      if (regexp.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Must return True in order to Submit a post\r\n    const SumbmitCondition =\r\n      is_url(this.state.post.link) && this.state.post.title.length >= 1;\r\n\r\n    return (\r\n      <div>\r\n        <FormGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"postTitle\"\r\n            id=\"postTitle\"\r\n            placeholder=\"Enter Title\"\r\n            onChange={(e) => this.onChangePostTitle(e.target.value)}\r\n            value={this.state.post.title}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"postLink\"\r\n            id=\"postLink\"\r\n            placeholder=\"Enter Link\"\r\n            onChange={(e) => this.onChangePostLink(e.target.value)}\r\n            value={this.state.post.link}\r\n          />\r\n        </FormGroup>\r\n\r\n        <ReactTags\r\n          allowNew={true}\r\n          ref={this.reactTags}\r\n          tags={this.state.tags}\r\n          onDelete={this.onTagDelete.bind(this)}\r\n          onAddition={this.onTagAddition.bind(this)}\r\n          onValidate={this.onTagValidate.bind(this)}\r\n        />\r\n\r\n        {SumbmitCondition ? (\r\n          <Button onClick={() => this.submitPost()} color=\"success\">\r\n            Submit\r\n          </Button>\r\n        ) : (\r\n          <Button disabled>Submit</Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NewPost);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Config\\firebase-redux.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Login\\Login.js",["73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase from \"../../Config/firebase\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = () => {\r\n  // required states for authentication\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n\r\n  // config for google authentication\r\n  const uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInSuccessUrl: \"/\",\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n  };\r\n\r\n  // clears login and signin state\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  // clears errors state\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  // signs in with existing user if there are no errors described in the switch statement\r\n  // if there are errors, set state with the corresponding error\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  // signs up a new user if there are no errors described in the switch statement\r\n  // if there are errors, set state with the corresponding error\r\n  const handleSignup = () => {\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  // sign out user, this is being used in the Header\r\n  // const handleLogout = () => {\r\n  //   firebase.auth().signOut();\r\n  // };\r\n\r\n  // checks for auth state changes, set state accordingly\r\n  const authListener = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // this hook is ran on every render\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <div className={classes.loginContainer}>\r\n        <label>UserName</label>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <p className={classes.errorMsg}>{emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className={classes.errorMsg}>{passwordError}</p>\r\n        <div className={classes.btnContainer}>\r\n          {\" \"}\r\n          {hasAccount ? (\r\n            <div>\r\n              <button className={classes.button} onClick={handleLogin}>\r\n                Sign In\r\n              </button>\r\n              <p>\r\n                Don't have an account?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <button className={classes.button} onClick={handleSignup}>\r\n                Sign Up\r\n              </button>\r\n              <p>\r\n                Have an account?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n              </p>\r\n            </div>\r\n          )}{\" \"}\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst enhance = connect(({ firebase: { auth, profile } }) => ({\r\n  auth,\r\n  profile,\r\n}));\r\n\r\nexport default enhance(Login);\r\n","C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\RatePost\\RatePost.js",[],"C:\\Dokumentai\\Projektai\\truthmeter\\truth-meter\\src\\Component\\Profile\\Profile.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":3,"nodeType":"83","messageId":"84","endLine":5,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":8,"column":3,"nodeType":"83","messageId":"84","endLine":8,"endColumn":9},{"ruleId":"81","severity":1,"message":"86","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":14},{"ruleId":"81","severity":1,"message":"87","line":13,"column":8,"nodeType":"83","messageId":"84","endLine":13,"endColumn":15},{"ruleId":"81","severity":1,"message":"88","line":8,"column":7,"nodeType":"83","messageId":"84","endLine":8,"endColumn":9},{"ruleId":"81","severity":1,"message":"89","line":2,"column":21,"nodeType":"83","messageId":"84","endLine":2,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":100,"column":13,"nodeType":"92","endLine":108,"endColumn":14},{"ruleId":"81","severity":1,"message":"93","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":15},{"ruleId":"81","severity":1,"message":"94","line":9,"column":10,"nodeType":"83","messageId":"84","endLine":9,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":43,"column":9,"nodeType":"97","messageId":"98","endLine":52,"endColumn":10},{"ruleId":"95","severity":1,"message":"96","line":64,"column":9,"nodeType":"97","messageId":"98","endLine":72,"endColumn":10},{"ruleId":"99","severity":1,"message":"100","line":96,"column":6,"nodeType":"101","endLine":96,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","'classes' is defined but never used.","'db' is assigned a value but never used.","'Input' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Alert' is defined but never used.","'user' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [authListener]",{"range":"108","text":"109"},[2809,2811],"[authListener]"]